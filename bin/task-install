#!/bin/sh

# Installs Opentox Webservice.
# Author: Christoph Helma, Andreas Maunz.

SELF=$(basename $0 -install)
[ "`id -u`" = "0" ] && echo "This script must be run as non-root." 1>&2 && exit 1

SILENT=false
if [ -n "$1" ]
then
    if [ "$1" = "silent" ]
    then
        SILENT=true
    fi
fi

if [ $SILENT = false ]; then
  echo
  echo "Welcome to service installation (<Return> to continue)."
  read delete_me
fi

# check wd is root of service
DIR=`pwd`
if echo $DIR | grep "$SELF/bin" >/dev/null 2>&1 ; then cd ..; fi

# # # Boot the script

# load base config, helper funs, environment
OT_CONFIG_DIR="$HOME/.opentox"
! [ -f "$OT_CONFIG_DIR/config/install/config.sh" ] && echo "config.sh not found." 1>&2 && exit 1 || . $OT_CONFIG_DIR/config/install/config.sh
! [ -f "$OT_PREFIX/install/utils.sh" ] && echo "utils.sh not found." 1>&2 && exit 1 || . $OT_PREFIX/install/utils.sh
[ -f $OT_CONFIG_DIR/opentox-ui.sh ] && . $OT_CONFIG_DIR/opentox-ui.sh # should have been done by user already
RUBY_DIR="$HOME/.rbenv/versions/$RUBY_NUM_VER"


# # # Install

check_utils "rbenv find"
check_log $SELF

if [ "$OT_BRANCH" = "development" ]; then
  cmd="test -d $OT_PREFIX/opentox-server" && run_cmd "$cmd" "Opentox-server"
  cmd="test -d $OT_PREFIX/opentox-client" && run_cmd "$cmd" "Opentox-client"
fi


# log directory for this service
[ -d $OT_CONFIG_DIR/config/$SELF ] || cmd="mkdir -p $OT_CONFIG_DIR/config/$SELF" && run_cmd "$cmd" "Config directory"

# Adjust ruby version here!
RUBY_NUM_VER="2.0.0-p247"

# ruby
install_ruby

# self
echo
install_with_bundler

# config
[ -f $OT_CONFIG_DIR/config/$SELF.rb ] || touch $OT_CONFIG_DIR/config/$SELF.rb
if ! cat "$OT_CONFIG_DIR/config/$SELF.rb" | grep "four_store">/dev/null 2>&1; then echo '$four_store = { :uri => "http://localhost:9088", :user => "", :password => "" }' >> $OT_CONFIG_DIR/config/$SELF.rb; fi
if ! cat "$OT_CONFIG_DIR/config/$SELF.rb" | grep "aa">/dev/null 2>&1; then echo '$aa = { :uri => nil }' >> $OT_CONFIG_DIR/config/$SELF.rb; fi
if ! cat "$OT_DEFAULT_CONF" | grep "$SELF">/dev/null 2>&1; then echo '$task = { :uri => "http://localhost:8086/task" }' >> $OT_DEFAULT_CONF; fi

if [ $SILENT = false ]; then
  notify
fi

# return to wd
cd "$DIR"
